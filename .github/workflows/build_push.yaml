name: Build and Publish Release

on:
  push:
    tags:
      - '*'

env:
  ARTIFACT_NAME: "fsenc"

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 'stable'

      - name: Build project
        shell: bash
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            go build -o ${{ env.ARTIFACT_NAME }}.exe
          else
            go build -o ${{ env.ARTIFACT_NAME }}
          fi

      - name: Install 7zip (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install 7zip

      - name: Archive production artifacts
        shell: bash
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            7z a ${{ env.ARTIFACT_NAME }}.zip ./${{ env.ARTIFACT_NAME }}.exe
          else
            tar -czvf ${{ env.ARTIFACT_NAME }}.tar.gz ./${{ env.ARTIFACT_NAME }}
          fi

      - name: Upload production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-artifact
          retention-days: 1
          path: |
            ${{ env.ARTIFACT_NAME }}${{ matrix.os == 'windows-latest' && '.zip' || '.tar.gz' }}

      - run: ls -R

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - run: ls -R

      - name: Upload Artifacts to Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: './*-artifact/*'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}